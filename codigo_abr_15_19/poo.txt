Personas

Características: 
peso, altura, color de pelo ... --> atributos 
nombreApellidos

Acciones:
correr(), andar(), dormir() --> métodos (def)

1 persona <--> 1 objeto (instancia)
peso = 80
altura = 1.9
...

1 clase -> N objetos de la clase

self -> el objeto que está en curso.

Instanciar la clase --> a crear un objeto
- constructor de la clase: __init__(self, ....)
- destructor: __del__(self)

Python tiene una superclase que se llama: object

Relaciones entre clases:
- Herencia: clases que tienen cosas en común.
Empleados: programador, analista, jefedeproyecto
Empleado hereda de persona: Un empleado es una persona
persona: clase padre, superclase
empleado: clase hija, subclase

            Coche
     C.Gasolina   C.Electrico
             Hibrido

- Composición: Una clase que se desglosa en partes / piezas
que pueden atributos de otras clase.
Coche
   motor
   chasis
   ruedad

- Asociación: Dos objetos independientes, en un momento
dado se relacionan.

coche.repostar(surtidorGas)


Sobrecarga operadores: aritméticos, relacionales
__lt__  <

suma = hora1 + hora2  --> __add__


Funciones	Funciones Especiales (dentro de las clases)
str()		__str__()
repr()		__repr__()
del()		__del__()  -> destructor de la clase


Python es un lenguaje de POO dinámico:
__dict__

Y si no queremos que se pueda modificar la clase 
en t.de ejecución: __slots__












